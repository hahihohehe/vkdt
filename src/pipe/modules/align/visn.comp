#version 460
#extension GL_GOOGLE_include_directive    : enable
#extension GL_EXT_nonuniform_qualifier    : enable

#include "shared.glsl"

layout(local_size_x = DT_LOCAL_SIZE_X, local_size_y = DT_LOCAL_SIZE_Y, local_size_z = 1) in;

layout( // input buffer warp offsets
    set = 1, binding = 0
) uniform sampler2D img_off;

layout( // output debug visualisation of mv
    set = 1, binding = 1
) uniform writeonly image2D img_visn;

// runs on output dimensions, reads offset texture
// and input image at offset position, rounded to mosaic block.
void
main()
{
  ivec2 ipos = ivec2(gl_GlobalInvocationID);
  if(any(greaterThanEqual(ipos, imageSize(img_visn)))) return;

  vec2 off = texelFetch(img_off, ipos, 0).xy;

  // fill debug normals
  // float len = length(off.xy);
  // vec3 rgb = vec3(0.0);
  // if(len > 2.0) rgb = vec3(off.xy/max(10.0, len), 0);
  vec3 rgb = vec3(off.xy, 0) * 0.05;
  rgb = clamp((vec3(1.0) + rgb)*.5, vec3(0.0), vec3(1.0));
  imageStore(img_visn, ipos, vec4(rgb, 1));
}
