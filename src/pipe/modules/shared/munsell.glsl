const int munsell_hdim = 40;
const int munsell_cdim = 21;
#define M_PI   3.14159265358979323846

const float16_t munsell_xy[2*21*40] = {
float16_t(0.312726), float16_t(0.329034), float16_t(0.284711), float16_t(0.309918), float16_t(0.257063), float16_t(0.289231), float16_t(0.231869), float16_t(0.268279), float16_t(0.20812), float16_t(0.247624), float16_t(0.186785), float16_t(0.227679), float16_t(0.166643), float16_t(0.208608), float16_t(0.148453), float16_t(0.191269), float16_t(0.130993), float16_t(0.17401), float16_t(0.117987), float16_t(0.160639), float16_t(0.104922), float16_t(0.146337), float16_t(0.0920982), float16_t(0.13467), float16_t(0.0797384), float16_t(0.123781), float16_t(0.0679308), float16_t(0.113379), float16_t(0.0566016), float16_t(0.103399), float16_t(0.0456921), float16_t(0.0937876), float16_t(0.0351546), float16_t(0.0845046), float16_t(0.0249499), float16_t(0.0755146), float16_t(0.0150452), float16_t(0.066789), float16_t(0.00541267), float16_t(0.0583031), float16_t(-0.0039715), float16_t(0.050036), float16_t(0.312726), float16_t(0.329034), float16_t(0.282767), float16_t(0.313473), float16_t(0.253216), float16_t(0.294623), float16_t(0.226426), float16_t(0.275101), float16_t(0.201705), float16_t(0.255451), float16_t(0.1795), float16_t(0.236411), float16_t(0.157866), float16_t(0.217099), float16_t(0.139011), float16_t(0.200129), float16_t(0.120674), float16_t(0.182709), float16_t(0.105837), float16_t(0.167895), float16_t(0.0941206), float16_t(0.156282), float16_t(0.0819057), float16_t(0.14663), float16_t(0.0702398), float16_t(0.137411), float16_t(0.0590497), float16_t(0.128568), float16_t(0.0482769), float16_t(0.120055), float16_t(0.0378741), float16_t(0.111834), float16_t(0.0278023), float16_t(0.103875), float16_t(0.0180288), float16_t(0.0961514), float16_t(0.00852609), float16_t(0.0886419), float16_t(-0.000729532), float16_t(0.0813277), float16_t(-0.00975846), float16_t(0.0741927), float16_t(0.312726), float16_t(0.329034), float16_t(0.281753), float16_t(0.316791), float16_t(0.251181), float16_t(0.302021), float16_t(0.222804), float16_t(0.284461), float16_t(0.196392), float16_t(0.266273), float16_t(0.172691), float16_t(0.248908), float16_t(0.149343), float16_t(0.231081), float16_t(0.129933), float16_t(0.215568), float16_t(0.110085), float16_t(0.199215), float16_t(0.0939513), float16_t(0.184277), float16_t(0.0811517), float16_t(0.171658), float16_t(0.0673097), float16_t(0.162251), float16_t(0.0541303), float16_t(0.153294), float16_t(0.04152), float16_t(0.144724), float16_t(0.0294053), float16_t(0.136491), float16_t(0.0177272), float16_t(0.128555), float16_t(0.00643773), float16_t(0.120882), float16_t(-0.0045031), float16_t(0.113447), float16_t(-0.0151288), float16_t(0.106226), float16_t(-0.025468), float16_t(0.0991996), float16_t(-0.035545), float16_t(0.0923513), float16_t(0.312726), float16_t(0.329034), float16_t(0.281335), float16_t(0.320805), float16_t(0.250892), float16_t(0.309764), float16_t(0.222023), float16_t(0.297139), float16_t(0.194935), float16_t(0.283841), float16_t(0.169018), float16_t(0.270198), float16_t(0.144402), float16_t(0.255893), float16_t(0.125728), float16_t(0.244388), float16_t(0.105368), float16_t(0.23159), float16_t(0.089465), float16_t(0.220731), float16_t(0.0713491), float16_t(0.208374), float16_t(0.0532075), float16_t(0.199306), float16_t(0.036141), float16_t(0.190775), float16_t(0.0199669), float16_t(0.18269), float16_t(0.00454911), float16_t(0.174982), float16_t(-0.0102172), float16_t(0.167601), float16_t(-0.0244147), float16_t(0.160504), float16_t(-0.0381099), float16_t(0.153658), float16_t(-0.0513575), float16_t(0.147036), float16_t(-0.0642027), float16_t(0.140615), float16_t(-0.0766838), float16_t(0.134376), float16_t(0.312726), float16_t(0.329034), float16_t(0.281735), float16_t(0.324891), float16_t(0.252741), float16_t(0.318556), float16_t(0.224234), float16_t(0.310408), float16_t(0.197013), float16_t(0.30175), float16_t(0.170684), float16_t(0.292173), float16_t(0.146607), float16_t(0.282674), float16_t(0.128069), float16_t(0.274843), float16_t(0.107022), float16_t(0.265678), float16_t(0.0882015), float16_t(0.256822), float16_t(0.0733387), float16_t(0.248768), float16_t(0.0594805), float16_t(0.242777), float16_t(0.0509306), float16_t(0.237689), float16_t(0.0419722), float16_t(0.234563), float16_t(0.0332753), float16_t(0.231529), float16_t(0.0248168), float16_t(0.228577), float16_t(0.0165769), float16_t(0.225702), float16_t(0.00853834), float16_t(0.222898), float16_t(0.000685968), float16_t(0.220158), float16_t(-0.00699347), float16_t(0.217478), float16_t(-0.0145118), float16_t(0.214855), float16_t(0.312726), float16_t(0.329034), float16_t(0.283233), float16_t(0.329959), float16_t(0.256376), float16_t(0.329729), float16_t(0.229852), float16_t(0.328046), float16_t(0.202829), float16_t(0.324512), float16_t(0.176519), float16_t(0.32021), float16_t(0.151654), float16_t(0.315213), float16_t(0.133583), float16_t(0.311221), float16_t(0.112927), float16_t(0.306459), float16_t(0.0934527), float16_t(0.301638), float16_t(0.0773956), float16_t(0.29711), float16_t(0.0646807), float16_t(0.293303), float16_t(0.0551232), float16_t(0.28939), float16_t(0.0476733), float16_t(0.28751), float16_t(0.0402874), float16_t(0.286353), float16_t(0.0330822), float16_t(0.285224), float16_t(0.0260444), float16_t(0.284121), float16_t(0.0191623), float16_t(0.283043), float16_t(0.0124254), float16_t(0.281988), float16_t(0.00582431), float16_t(0.280954), float16_t(-0.000649265), float16_t(0.27994), float16_t(0.312726), float16_t(0.329034), float16_t(0.286063), float16_t(0.334873), float16_t(0.260344), float16_t(0.339425), float16_t(0.236536), float16_t(0.342693), float16_t(0.209691), float16_t(0.344638), float16_t(0.183803), float16_t(0.345527), float16_t(0.159276), float16_t(0.346368), float16_t(0.141979), float16_t(0.346447), float16_t(0.120562), float16_t(0.345736), float16_t(0.0999158), float16_t(0.344683), float16_t(0.084991), float16_t(0.343845), float16_t(0.0720371), float16_t(0.342211), float16_t(0.0603194), float16_t(0.341465), float16_t(0.0508035), float16_t(0.339707), float16_t(0.0423301), float16_t(0.338951), float16_t(0.0338444), float16_t(0.338194), float16_t(0.025596), float16_t(0.338465), float16_t(0.0175643), float16_t(0.338729), float16_t(0.0097324), float16_t(0.338986), float16_t(0.00208552), float16_t(0.339237), float16_t(-0.0053895), float16_t(0.339483), float16_t(0.312726), float16_t(0.329034), float16_t(0.289877), float16_t(0.340867), float16_t(0.266996), float16_t(0.351751), float16_t(0.245156), float16_t(0.360978), float16_t(0.219995), float16_t(0.37054), float16_t(0.196679), float16_t(0.378417), float16_t(0.171265), float16_t(0.385672), float16_t(0.15298), float16_t(0.390431), float16_t(0.131025), float16_t(0.395539), float16_t(0.111946), float16_t(0.399832), float16_t(0.0952358), float16_t(0.403429), float16_t(0.0801765), float16_t(0.405844), float16_t(0.0672917), float16_t(0.408281), float16_t(0.0570141), float16_t(0.409597), float16_t(0.0454622), float16_t(0.412089), float16_t(0.033896), float16_t(0.41356), float16_t(0.0180992), float16_t(0.416222), float16_t(0.00354957), float16_t(0.420527), float16_t(-0.0103696), float16_t(0.424646), float16_t(-0.0237354), float16_t(0.428602), float16_t(-0.0366108), float16_t(0.432412), float16_t(0.312726), float16_t(0.329034), float16_t(0.292825), float16_t(0.344842), float16_t(0.272087), float16_t(0.360325), float16_t(0.252106), float16_t(0.374455), float16_t(0.22903), float16_t(0.389812), float16_t(0.208048), float16_t(0.403065), float16_t(0.182819), float16_t(0.418103), float16_t(0.164031), float16_t(0.428648), float16_t(0.143059), float16_t(0.439892), float16_t(0.122909), float16_t(0.450402), float16_t(0.106805), float16_t(0.45833), float16_t(0.0899667), float16_t(0.465891), float16_t(0.0746752), float16_t(0.472888), float16_t(0.0620805), float16_t(0.478565), float16_t(0.0497909), float16_t(0.48393), float16_t(0.0329065), float16_t(0.491714), float16_t(0.0141315), float16_t(0.500592), float16_t(-0.00279296), float16_t(0.510316), float16_t(-0.0188621), float16_t(0.519549), float16_t(-0.0341945), float16_t(0.528358), float16_t(-0.0488835), float16_t(0.536798), float16_t(0.312726), float16_t(0.329034), float16_t(0.296263), float16_t(0.349304), float16_t(0.278377), float16_t(0.369237), float16_t(0.259838), float16_t(0.388047), float16_t(0.238644), float16_t(0.408141), float16_t(0.218348), float16_t(0.42576), float16_t(0.193835), float16_t(0.445742), float16_t(0.174334), float16_t(0.460991), float16_t(0.153097), float16_t(0.476507), float16_t(0.132486), float16_t(0.491791), float16_t(0.115923), float16_t(0.503698), float16_t(0.0991602), float16_t(0.515413), float16_t(0.0813678), float16_t(0.527373), float16_t(0.0660602), float16_t(0.53723), float16_t(0.0510618), float16_t(0.547171), float16_t(0.0329595), float16_t(0.557562), float16_t(0.0122602), float16_t(0.56848), float16_t(-0.00457037), float16_t(0.581893), float16_t(-0.0205395), float16_t(0.594619), float16_t(-0.0357664), float16_t(0.606753), float16_t(-0.0503448), float16_t(0.618371), float16_t(0.312726), float16_t(0.329034), float16_t(0.299516), float16_t(0.352952), float16_t(0.284872), float16_t(0.377406), float16_t(0.268863), float16_t(0.401428), float16_t(0.250019), float16_t(0.426995), float16_t(0.230978), float16_t(0.450198), float16_t(0.207562), float16_t(0.475824), float16_t(0.187651), float16_t(0.496077), float16_t(0.165206), float16_t(0.517702), float16_t(0.14394), float16_t(0.537463), float16_t(0.126318), float16_t(0.553087), float16_t(0.108412), float16_t(0.567925), float16_t(0.0887656), float16_t(0.585095), float16_t(0.0714037), float16_t(0.599003), float16_t(0.0534362), float16_t(0.613326), float16_t(0.0319907), float16_t(0.629289), float16_t(0.0114855), float16_t(0.646943), float16_t(-0.00581151), float16_t(0.665197), float16_t(-0.0221787), float16_t(0.68247), float16_t(-0.0377481), float16_t(0.698901), float16_t(-0.0526235), float16_t(0.714599), float16_t(0.312726), float16_t(0.329034), float16_t(0.30465), float16_t(0.358151), float16_t(0.294935), float16_t(0.387837), float16_t(0.283695), float16_t(0.41943), float16_t(0.269519), float16_t(0.453459), float16_t(0.254035), float16_t(0.486365), float16_t(0.235012), float16_t(0.523293), float16_t(0.216754), float16_t(0.557441), float16_t(0.195358), float16_t(0.592355), float16_t(0.172376), float16_t(0.626034), float16_t(0.151555), float16_t(0.655714), float16_t(0.130928), float16_t(0.683845), float16_t(0.111709), float16_t(0.708192), float16_t(0.0918451), float16_t(0.731853), float16_t(0.0718326), float16_t(0.754806), float16_t(0.0472359), float16_t(0.782228), float16_t(0.0261185), float16_t(0.805146), float16_t(0.0115683), float16_t(0.829317), float16_t(-0.00224112), float16_t(0.852257), float16_t(-0.0154068), float16_t(0.874128), float16_t(-0.0280062), float16_t(0.895058), float16_t(0.312726), float16_t(0.329034), float16_t(0.312587), float16_t(0.364252), float16_t(0.311517), float16_t(0.401891), float16_t(0.309907), float16_t(0.443905), float16_t(0.305693), float16_t(0.489374), float16_t(0.299067), float16_t(0.536455), float16_t(0.288833), float16_t(0.58672), float16_t(0.277472), float16_t(0.631105), float16_t(0.26277), float16_t(0.678606), float16_t(0.246561), float16_t(0.724565), float16_t(0.227917), float16_t(0.771412), float16_t(0.211438), float16_t(0.810301), float16_t(0.192092), float16_t(0.851869), float16_t(0.168959), float16_t(0.895239), float16_t(0.143982), float16_t(0.942937), float16_t(0.115315), float16_t(0.990582), float16_t(0.087836), float16_t(1.03517), float16_t(0.0740342), float16_t(1.07851), float16_t(0.0611442), float16_t(1.11898), float16_t(0.0490219), float16_t(1.15705), float16_t(0.0375572), float16_t(1.19305), float16_t(0.312726), float16_t(0.329034), float16_t(0.320336), float16_t(0.369232), float16_t(0.327608), float16_t(0.412581), float16_t(0.334014), float16_t(0.460918), float16_t(0.338139), float16_t(0.509156), float16_t(0.340265), float16_t(0.558941), float16_t(0.33862), float16_t(0.603078), float16_t(0.335274), float16_t(0.639956), float16_t(0.33235), float16_t(0.670777), float16_t(0.329398), float16_t(0.699986), float16_t(0.322425), float16_t(0.73389), float16_t(0.323147), float16_t(0.76401), float16_t(0.323815), float16_t(0.791883), float16_t(0.324438), float16_t(0.817913), float16_t(0.325025), float16_t(0.842399), float16_t(0.32558), float16_t(0.865565), float16_t(0.326107), float16_t(0.887586), float16_t(0.326611), float16_t(0.908603), float16_t(0.327093), float16_t(0.928729), float16_t(0.327556), float16_t(0.948058), float16_t(0.328002), float16_t(0.966669), float16_t(0.312726), float16_t(0.329034), float16_t(0.330394), float16_t(0.374114), float16_t(0.348172), float16_t(0.422039), float16_t(0.364391), float16_t(0.472505), float16_t(0.377661), float16_t(0.518692), float16_t(0.387274), float16_t(0.556101), float16_t(0.394157), float16_t(0.586112), float16_t(0.398964), float16_t(0.608498), float16_t(0.400998), float16_t(0.629202), float16_t(0.406301), float16_t(0.647234), float16_t(0.411282), float16_t(0.664172), float16_t(0.415991), float16_t(0.680181), float16_t(0.420463), float16_t(0.695391), float16_t(0.42473), float16_t(0.7099), float16_t(0.428815), float16_t(0.723792), float16_t(0.432738), float16_t(0.737132), float16_t(0.436516), float16_t(0.749977), float16_t(0.440161), float16_t(0.762373), float16_t(0.443687), float16_t(0.774361), float16_t(0.447102), float16_t(0.785974), float16_t(0.450415), float16_t(0.797242), float16_t(0.312726), float16_t(0.329034), float16_t(0.336684), float16_t(0.376302), float16_t(0.361936), float16_t(0.426059), float16_t(0.385725), float16_t(0.474705), float16_t(0.404673), float16_t(0.514988), float16_t(0.416765), float16_t(0.543477), float16_t(0.426416), float16_t(0.565342), float16_t(0.432076), float16_t(0.583936), float16_t(0.439603), float16_t(0.600013), float16_t(0.446657), float16_t(0.615079), float16_t(0.453313), float16_t(0.629293), float16_t(0.459626), float16_t(0.642777), float16_t(0.465642), float16_t(0.655625), float16_t(0.471396), float16_t(0.667914), float16_t(0.476917), float16_t(0.679705), float16_t(0.482229), float16_t(0.69105), float16_t(0.487352), float16_t(0.701993), float16_t(0.492304), float16_t(0.712569), float16_t(0.497099), float16_t(0.72281), float16_t(0.50175), float16_t(0.732744), float16_t(0.506268), float16_t(0.742393), float16_t(0.312726), float16_t(0.329034), float16_t(0.343712), float16_t(0.377251), float16_t(0.375977), float16_t(0.426978), float16_t(0.40494), float16_t(0.471407), float16_t(0.42663), float16_t(0.504162), float16_t(0.441329), float16_t(0.526871), float16_t(0.452403), float16_t(0.543734), float16_t(0.461424), float16_t(0.55764), float16_t(0.469886), float16_t(0.570649), float16_t(0.477864), float16_t(0.582914), float16_t(0.485428), float16_t(0.594543), float16_t(0.492632), float16_t(0.605619), float16_t(0.499521), float16_t(0.61621), float16_t(0.506129), float16_t(0.626369), float16_t(0.512487), float16_t(0.636142), float16_t(0.518617), float16_t(0.645568), float16_t(0.524542), float16_t(0.654676), float16_t(0.530279), float16_t(0.663496), float16_t(0.535843), float16_t(0.672051), float16_t(0.541248), float16_t(0.68036), float16_t(0.546506), float16_t(0.688443), float16_t(0.312726), float16_t(0.329034), float16_t(0.348584), float16_t(0.376265), float16_t(0.384909), float16_t(0.422843), float16_t(0.41779), float16_t(0.463984), float16_t(0.441188), float16_t(0.492128), float16_t(0.45805), float16_t(0.511405), float16_t(0.47049), float16_t(0.525369), float16_t(0.481746), float16_t(0.538452), float16_t(0.491858), float16_t(0.550981), float16_t(0.501366), float16_t(0.562762), float16_t(0.510362), float16_t(0.573907), float16_t(0.518915), float16_t(0.584504), float16_t(0.52708), float16_t(0.594621), float16_t(0.534903), float16_t(0.604314), float16_t(0.54242), float16_t(0.613628), float16_t(0.549662), float16_t(0.622601), float16_t(0.556656), float16_t(0.631266), float16_t(0.563422), float16_t(0.639649), float16_t(0.56998), float16_t(0.647775), float16_t(0.576346), float16_t(0.655663), float16_t(0.582536), float16_t(0.663332), float16_t(0.312726), float16_t(0.329034), float16_t(0.351681), float16_t(0.374137), float16_t(0.391645), float16_t(0.416315), float16_t(0.428471), float16_t(0.452139), float16_t(0.454574), float16_t(0.476147), float16_t(0.473075), float16_t(0.493193), float16_t(0.487474), float16_t(0.506353), float16_t(0.500364), float16_t(0.515474), float16_t(0.510714), float16_t(0.525759), float16_t(0.520492), float16_t(0.535474), float16_t(0.529778), float16_t(0.544701), float16_t(0.538636), float16_t(0.553502), float16_t(0.547115), float16_t(0.561927), float16_t(0.555258), float16_t(0.570019), float16_t(0.5631), float16_t(0.57781), float16_t(0.570668), float16_t(0.58533), float16_t(0.577988), float16_t(0.592603), float16_t(0.585081), float16_t(0.599651), float16_t(0.591965), float16_t(0.606491), float16_t(0.598656), float16_t(0.613139), float16_t(0.605168), float16_t(0.619609), float16_t(0.312726), float16_t(0.329034), float16_t(0.355291), float16_t(0.368968), float16_t(0.397351), float16_t(0.405843), float16_t(0.436815), float16_t(0.43772), float16_t(0.465774), float16_t(0.459256), float16_t(0.486531), float16_t(0.473848), float16_t(0.503125), float16_t(0.485621), float16_t(0.516983), float16_t(0.494462), float16_t(0.528827), float16_t(0.504055), float16_t(0.539988), float16_t(0.513094), float16_t(0.550566), float16_t(0.521661), float16_t(0.56064), float16_t(0.52982), float16_t(0.570269), float16_t(0.537619), float16_t(0.579506), float16_t(0.545099), float16_t(0.588391), float16_t(0.552295), float16_t(0.596958), float16_t(0.559234), float16_t(0.605238), float16_t(0.56594), float16_t(0.613256), float16_t(0.572434), float16_t(0.621032), float16_t(0.578732), float16_t(0.628586), float16_t(0.58485), float16_t(0.635934), float16_t(0.590801), float16_t(0.312726), float16_t(0.329034), float16_t(0.356706), float16_t(0.36327), float16_t(0.400515), float16_t(0.394356), float16_t(0.442307), float16_t(0.421313), float16_t(0.475025), float16_t(0.440644), float16_t(0.499245), float16_t(0.45439), float16_t(0.516798), float16_t(0.46444), float16_t(0.533754), float16_t(0.471456), float16_t(0.545842), float16_t(0.479625), float16_t(0.557426), float16_t(0.487109), float16_t(0.568428), float16_t(0.494216), float16_t(0.578924), float16_t(0.500997), float16_t(0.588974), float16_t(0.507489), float16_t(0.598627), float16_t(0.513724), float16_t(0.607922), float16_t(0.519729), float16_t(0.616896), float16_t(0.525526), float16_t(0.625576), float16_t(0.531133), float16_t(0.633988), float16_t(0.536567), float16_t(0.642153), float16_t(0.541842), float16_t(0.650091), float16_t(0.54697), float16_t(0.657817), float16_t(0.551961), float16_t(0.312726), float16_t(0.329034), float16_t(0.356352), float16_t(0.356314), float16_t(0.400636), float16_t(0.381756), float16_t(0.444295), float16_t(0.404001), float16_t(0.480918), float16_t(0.42103), float16_t(0.508475), float16_t(0.433165), float16_t(0.53008), float16_t(0.442238), float16_t(0.546303), float16_t(0.448567), float16_t(0.562704), float16_t(0.455636), float16_t(0.577515), float16_t(0.463137), float16_t(0.591458), float16_t(0.470199), float16_t(0.604661), float16_t(0.476886), float16_t(0.617226), float16_t(0.483249), float16_t(0.629232), float16_t(0.48933), float16_t(0.640742), float16_t(0.495159), float16_t(0.651809), float16_t(0.500764), float16_t(0.662478), float16_t(0.506167), float16_t(0.672786), float16_t(0.511388), float16_t(0.682764), float16_t(0.516441), float16_t(0.69244), float16_t(0.521341), float16_t(0.701837), float16_t(0.526101), float16_t(0.312726), float16_t(0.329034), float16_t(0.355524), float16_t(0.351287), float16_t(0.398746), float16_t(0.371803), float16_t(0.442983), float16_t(0.389539), float16_t(0.482811), float16_t(0.403084), float16_t(0.514794), float16_t(0.41208), float16_t(0.539882), float16_t(0.418636), float16_t(0.560951), float16_t(0.423654), float16_t(0.579862), float16_t(0.427662), float16_t(0.596053), float16_t(0.430888), float16_t(0.610401), float16_t(0.436046), float16_t(0.62402), float16_t(0.440942), float16_t(0.637005), float16_t(0.44561), float16_t(0.649433), float16_t(0.450078), float16_t(0.661365), float16_t(0.454367), float16_t(0.672854), float16_t(0.458498), float16_t(0.683941), float16_t(0.462483), float16_t(0.694664), float16_t(0.466338), float16_t(0.705054), float16_t(0.470073), float16_t(0.715138), float16_t(0.473698), float16_t(0.724939), float16_t(0.477222), float16_t(0.312726), float16_t(0.329034), float16_t(0.353308), float16_t(0.345491), float16_t(0.394927), float16_t(0.35988), float16_t(0.438283), float16_t(0.37295), float16_t(0.480372), float16_t(0.383143), float16_t(0.517355), float16_t(0.390263), float16_t(0.547059), float16_t(0.395534), float16_t(0.571075), float16_t(0.398928), float16_t(0.590476), float16_t(0.401699), float16_t(0.613219), float16_t(0.403836), float16_t(0.631285), float16_t(0.407025), float16_t(0.647946), float16_t(0.411104), float16_t(0.663736), float16_t(0.41497), float16_t(0.678771), float16_t(0.418651), float16_t(0.693145), float16_t(0.42217), float16_t(0.706932), float16_t(0.425546), float16_t(0.720196), float16_t(0.428793), float16_t(0.732987), float16_t(0.431925), float16_t(0.74535), float16_t(0.434951), float16_t(0.757322), float16_t(0.437882), float16_t(0.768935), float16_t(0.440726), float16_t(0.312726), float16_t(0.329034), float16_t(0.34937), float16_t(0.339642), float16_t(0.390695), float16_t(0.350353), float16_t(0.432342), float16_t(0.359039), float16_t(0.473168), float16_t(0.365172), float16_t(0.512413), float16_t(0.369216), float16_t(0.548394), float16_t(0.370864), float16_t(0.576717), float16_t(0.370209), float16_t(0.602657), float16_t(0.368555), float16_t(0.627975), float16_t(0.366137), float16_t(0.65265), float16_t(0.362073), float16_t(0.677021), float16_t(0.357243), float16_t(0.698376), float16_t(0.353515), float16_t(0.716883), float16_t(0.348915), float16_t(0.733698), float16_t(0.349742), float16_t(0.7498), float16_t(0.350534), float16_t(0.765268), float16_t(0.351295), float16_t(0.780168), float16_t(0.352028), float16_t(0.794554), float16_t(0.352735), float16_t(0.808473), float16_t(0.35342), float16_t(0.821966), float16_t(0.354084), float16_t(0.312726), float16_t(0.329034), float16_t(0.34549), float16_t(0.334796), float16_t(0.383763), float16_t(0.340082), float16_t(0.421113), float16_t(0.344244), float16_t(0.459182), float16_t(0.346839), float16_t(0.495265), float16_t(0.346774), float16_t(0.530187), float16_t(0.344546), float16_t(0.560776), float16_t(0.341577), float16_t(0.591463), float16_t(0.33662), float16_t(0.617174), float16_t(0.330356), float16_t(0.639663), float16_t(0.323518), float16_t(0.661519), float16_t(0.318204), float16_t(0.680264), float16_t(0.312607), float16_t(0.692223), float16_t(0.307239), float16_t(0.708033), float16_t(0.301749), float16_t(0.723002), float16_t(0.300716), float16_t(0.7374), float16_t(0.299723), float16_t(0.751285), float16_t(0.298764), float16_t(0.764706), float16_t(0.297838), float16_t(0.777703), float16_t(0.296941), float16_t(0.790313), float16_t(0.29607), float16_t(0.312726), float16_t(0.329034), float16_t(0.342272), float16_t(0.331141), float16_t(0.377397), float16_t(0.3328), float16_t(0.411359), float16_t(0.333471), float16_t(0.444914), float16_t(0.332532), float16_t(0.47828), float16_t(0.330087), float16_t(0.510611), float16_t(0.325674), float16_t(0.537505), float16_t(0.321155), float16_t(0.566992), float16_t(0.314554), float16_t(0.594971), float16_t(0.307218), float16_t(0.617334), float16_t(0.299677), float16_t(0.637137), float16_t(0.292028), float16_t(0.651197), float16_t(0.285569), float16_t(0.665177), float16_t(0.28012), float16_t(0.677201), float16_t(0.274735), float16_t(0.688939), float16_t(0.272986), float16_t(0.700298), float16_t(0.271294), float16_t(0.711311), float16_t(0.269653), float16_t(0.722007), float16_t(0.26806), float16_t(0.732412), float16_t(0.26651), float16_t(0.742545), float16_t(0.265), float16_t(0.312726), float16_t(0.329034), float16_t(0.339141), float16_t(0.327784), float16_t(0.36959), float16_t(0.325749), float16_t(0.399946), float16_t(0.322911), float16_t(0.429427), float16_t(0.318993), float16_t(0.45777), float16_t(0.313706), float16_t(0.48669), float16_t(0.3071), float16_t(0.509545), float16_t(0.301107), float16_t(0.53503), float16_t(0.293223), float16_t(0.559214), float16_t(0.284788), float16_t(0.583805), float16_t(0.275443), float16_t(0.598616), float16_t(0.268021), float16_t(0.612771), float16_t(0.261532), float16_t(0.625935), float16_t(0.255076), float16_t(0.637064), float16_t(0.249694), float16_t(0.648132), float16_t(0.246986), float16_t(0.658829), float16_t(0.244369), float16_t(0.66919), float16_t(0.241835), float16_t(0.679244), float16_t(0.239376), float16_t(0.689014), float16_t(0.236986), float16_t(0.698525), float16_t(0.234659), float16_t(0.312726), float16_t(0.329034), float16_t(0.336389), float16_t(0.325123), float16_t(0.363128), float16_t(0.32006), float16_t(0.389324), float16_t(0.314009), float16_t(0.415186), float16_t(0.307169), float16_t(0.438289), float16_t(0.300124), float16_t(0.463425), float16_t(0.291503), float16_t(0.482558), float16_t(0.2843), float16_t(0.504844), float16_t(0.275383), float16_t(0.525077), float16_t(0.267147), float16_t(0.546535), float16_t(0.257868), float16_t(0.561268), float16_t(0.249806), float16_t(0.577487), float16_t(0.243236), float16_t(0.589736), float16_t(0.23678), float16_t(0.600927), float16_t(0.231375), float16_t(0.612012), float16_t(0.227619), float16_t(0.622688), float16_t(0.224002), float16_t(0.632996), float16_t(0.220509), float16_t(0.642971), float16_t(0.217129), float16_t(0.652643), float16_t(0.213851), float16_t(0.662038), float16_t(0.210668), float16_t(0.312726), float16_t(0.329034), float16_t(0.33284), float16_t(0.321874), float16_t(0.35536), float16_t(0.313583), float16_t(0.37707), float16_t(0.304411), float16_t(0.398275), float16_t(0.294651), float16_t(0.416388), float16_t(0.286017), float16_t(0.436489), float16_t(0.275386), float16_t(0.45206), float16_t(0.266838), float16_t(0.468886), float16_t(0.257131), float16_t(0.483774), float16_t(0.247993), float16_t(0.499694), float16_t(0.238213), float16_t(0.51316), float16_t(0.229424), float16_t(0.526102), float16_t(0.221061), float16_t(0.5355), float16_t(0.213612), float16_t(0.545841), float16_t(0.207169), float16_t(0.556241), float16_t(0.199693), float16_t(0.566841), float16_t(0.194063), float16_t(0.577011), float16_t(0.188661), float16_t(0.586799), float16_t(0.183462), float16_t(0.596246), float16_t(0.178445), float16_t(0.605384), float16_t(0.173591), float16_t(0.312726), float16_t(0.329034), float16_t(0.328879), float16_t(0.318634), float16_t(0.346059), float16_t(0.306728), float16_t(0.363144), float16_t(0.294721), float16_t(0.380134), float16_t(0.282612), float16_t(0.393927), float16_t(0.272033), float16_t(0.408772), float16_t(0.260598), float16_t(0.421342), float16_t(0.250458), float16_t(0.433825), float16_t(0.24011), float16_t(0.445468), float16_t(0.230606), float16_t(0.457232), float16_t(0.220785), float16_t(0.467436), float16_t(0.212034), float16_t(0.47819), float16_t(0.202436), float16_t(0.486365), float16_t(0.194141), float16_t(0.493797), float16_t(0.18669), float16_t(0.502242), float16_t(0.179211), float16_t(0.509683), float16_t(0.171751), float16_t(0.517494), float16_t(0.165513), float16_t(0.525021), float16_t(0.159502), float16_t(0.532293), float16_t(0.153696), float16_t(0.539334), float16_t(0.148073), float16_t(0.312726), float16_t(0.329034), float16_t(0.323222), float16_t(0.314114), float16_t(0.333825), float16_t(0.298404), float16_t(0.34435), float16_t(0.282562), float16_t(0.354478), float16_t(0.267009), float16_t(0.362063), float16_t(0.2546), float16_t(0.370206), float16_t(0.241222), float16_t(0.377598), float16_t(0.22919), float16_t(0.38414), float16_t(0.218306), float16_t(0.390479), float16_t(0.207619), float16_t(0.396202), float16_t(0.197245), float16_t(0.401818), float16_t(0.187171), float16_t(0.406338), float16_t(0.179102), float16_t(0.411418), float16_t(0.16996), float16_t(0.415771), float16_t(0.161242), float16_t(0.420223), float16_t(0.152722), float16_t(0.424635), float16_t(0.145248), float16_t(0.428027), float16_t(0.137785), float16_t(0.433566), float16_t(0.128156), float16_t(0.439043), float16_t(0.119051), float16_t(0.444302), float16_t(0.11031), float16_t(0.312726), float16_t(0.329034), float16_t(0.318125), float16_t(0.310899), float16_t(0.32382), float16_t(0.292344), float16_t(0.329015), float16_t(0.273948), float16_t(0.333371), float16_t(0.256652), float16_t(0.336713), float16_t(0.242445), float16_t(0.339979), float16_t(0.227679), float16_t(0.342978), float16_t(0.214969), float16_t(0.345653), float16_t(0.202865), float16_t(0.348011), float16_t(0.19116), float16_t(0.350559), float16_t(0.180055), float16_t(0.352442), float16_t(0.170419), float16_t(0.354114), float16_t(0.16098), float16_t(0.356328), float16_t(0.150876), float16_t(0.357633), float16_t(0.143213), float16_t(0.359176), float16_t(0.134682), float16_t(0.36047), float16_t(0.12742), float16_t(0.361849), float16_t(0.117799), float16_t(0.363193), float16_t(0.109228), float16_t(0.364424), float16_t(0.103857), float16_t(0.365694), float16_t(0.0974078), float16_t(0.312726), float16_t(0.329034), float16_t(0.313615), float16_t(0.308276), float16_t(0.313975), float16_t(0.286777), float16_t(0.313881), float16_t(0.266635), float16_t(0.313842), float16_t(0.247958), float16_t(0.313586), float16_t(0.232859), float16_t(0.31314), float16_t(0.217189), float16_t(0.313245), float16_t(0.203655), float16_t(0.312806), float16_t(0.190934), float16_t(0.31236), float16_t(0.178388), float16_t(0.311659), float16_t(0.167293), float16_t(0.311584), float16_t(0.15605), float16_t(0.310999), float16_t(0.147875), float16_t(0.310461), float16_t(0.138084), float16_t(0.310295), float16_t(0.129759), float16_t(0.309726), float16_t(0.120891), float16_t(0.308969), float16_t(0.111256), float16_t(0.309226), float16_t(0.102657), float16_t(0.308403), float16_t(0.0951369), float16_t(0.307514), float16_t(0.0897618), float16_t(0.307738), float16_t(0.0822016), float16_t(0.312726), float16_t(0.329034), float16_t(0.30778), float16_t(0.30528), float16_t(0.302441), float16_t(0.281864), float16_t(0.297532), float16_t(0.260053), float16_t(0.293255), float16_t(0.24029), float16_t(0.289588), float16_t(0.223762), float16_t(0.286011), float16_t(0.207055), float16_t(0.283165), float16_t(0.193424), float16_t(0.280306), float16_t(0.179852), float16_t(0.277916), float16_t(0.167814), float16_t(0.275704), float16_t(0.156694), float16_t(0.273788), float16_t(0.145963), float16_t(0.271847), float16_t(0.135953), float16_t(0.270283), float16_t(0.127411), float16_t(0.268741), float16_t(0.117883), float16_t(0.266025), float16_t(0.108784), float16_t(0.263106), float16_t(0.0991261), float16_t(0.262264), float16_t(0.0904915), float16_t(0.260337), float16_t(0.08294), float16_t(0.259438), float16_t(0.0764441), float16_t(0.258537), float16_t(0.0699377), float16_t(0.312726), float16_t(0.329034), float16_t(0.303223), float16_t(0.303781), float16_t(0.293493), float16_t(0.278824), float16_t(0.284662), float16_t(0.255947), float16_t(0.27717), float16_t(0.23487), float16_t(0.271088), float16_t(0.21773), float16_t(0.265593), float16_t(0.200808), float16_t(0.260952), float16_t(0.186224), float16_t(0.256584), float16_t(0.17253), float16_t(0.252783), float16_t(0.160692), float16_t(0.249077), float16_t(0.148706), float16_t(0.245548), float16_t(0.137643), float16_t(0.242611), float16_t(0.127824), float16_t(0.240279), float16_t(0.118937), float16_t(0.236501), float16_t(0.10822), float16_t(0.234549), float16_t(0.100686), float16_t(0.231579), float16_t(0.0909863), float16_t(0.228578), float16_t(0.0823481), float16_t(0.226633), float16_t(0.0736734), float16_t(0.22464), float16_t(0.0671624), float16_t(0.222519), float16_t(0.0608571), float16_t(0.312726), float16_t(0.329034), float16_t(0.299044), float16_t(0.303194), float16_t(0.285591), float16_t(0.278231), float16_t(0.272345), float16_t(0.25296), float16_t(0.26106), float16_t(0.23226), float16_t(0.251738), float16_t(0.213483), float16_t(0.242343), float16_t(0.195445), float16_t(0.233809), float16_t(0.178777), float16_t(0.226249), float16_t(0.16371), float16_t(0.221224), float16_t(0.151949), float16_t(0.215873), float16_t(0.139725), float16_t(0.211963), float16_t(0.128615), float16_t(0.207705), float16_t(0.118449), float16_t(0.203656), float16_t(0.107707), float16_t(0.200622), float16_t(0.0990876), float16_t(0.196533), float16_t(0.0893763), float16_t(0.192414), float16_t(0.0807287), float16_t(0.189337), float16_t(0.073136), float16_t(0.18627), float16_t(0.0644322), float16_t(0.182435), float16_t(0.0564083), float16_t(0.178697), float16_t(0.0485872), float16_t(0.312726), float16_t(0.329034), float16_t(0.294831), float16_t(0.303635), float16_t(0.277121), float16_t(0.279208), float16_t(0.259591), float16_t(0.253837), float16_t(0.244952), float16_t(0.23195), float16_t(0.231605), float16_t(0.21293), float16_t(0.218607), float16_t(0.193143), float16_t(0.206854), float16_t(0.175439), float16_t(0.196901), float16_t(0.159627), float16_t(0.188377), float16_t(0.144137), float16_t(0.181373), float16_t(0.130701), float16_t(0.176855), float16_t(0.120088), float16_t(0.1717), float16_t(0.10826), float16_t(0.166497), float16_t(0.0985686), float16_t(0.163406), float16_t(0.0899054), float16_t(0.159236), float16_t(0.0812378), float16_t(0.155055), float16_t(0.0725481), float16_t(0.150863), float16_t(0.0638362), float16_t(0.145998), float16_t(0.0558658), float16_t(0.141254), float16_t(0.0480933), float16_t(0.136621), float16_t(0.0405033), float16_t(0.312726), float16_t(0.329034), float16_t(0.291094), float16_t(0.305295), float16_t(0.26912), float16_t(0.281621), float16_t(0.247476), float16_t(0.257514), float16_t(0.227979), float16_t(0.236072), float16_t(0.210088), float16_t(0.215685), float16_t(0.193409), float16_t(0.196709), float16_t(0.178391), float16_t(0.17906), float16_t(0.164341), float16_t(0.161385), float16_t(0.15179), float16_t(0.144864), float16_t(0.141496), float16_t(0.130481), float16_t(0.133046), float16_t(0.119798), float16_t(0.122444), float16_t(0.105844), float16_t(0.113933), float16_t(0.0939769), float16_t(0.106461), float16_t(0.0831444), float16_t(0.101122), float16_t(0.0733419), float16_t(0.09359), float16_t(0.0646432), float16_t(0.0864531), float16_t(0.0560325), float16_t(0.0795048), float16_t(0.0476492), float16_t(0.0727293), float16_t(0.0394745), float16_t(0.0661131), float16_t(0.0314919), float16_t(0.312726), float16_t(0.329034), float16_t(0.287448), float16_t(0.307365), float16_t(0.262632), float16_t(0.285233), float16_t(0.238866), float16_t(0.261825), float16_t(0.217661), float16_t(0.240441), float16_t(0.198261), float16_t(0.21989), float16_t(0.180164), float16_t(0.200848), float16_t(0.164458), float16_t(0.183537), float16_t(0.149082), float16_t(0.165786), float16_t(0.13519), float16_t(0.150048), float16_t(0.122166), float16_t(0.136262), float16_t(0.111541), float16_t(0.123447), float16_t(0.0997912), float16_t(0.110594), float16_t(0.088228), float16_t(0.0987322), float16_t(0.0771635), float16_t(0.0873817), float16_t(0.0665329), float16_t(0.0764763), float16_t(0.0562844), float16_t(0.0659628), float16_t(0.0463754), float16_t(0.0557976), float16_t(0.036771), float16_t(0.0459449), float16_t(0.0274416), float16_t(0.0363744), float16_t(0.0183623), float16_t(0.0270603), };

float
xy_to_monotone_hue_angle(vec2 xy)
{
  // the colours in the chart go clockwise, the angle will go counter clockwise, hence the sign.
  // also we subtract the angle of hue index==0 so the output will start at zero and grow monotonically.
  // this is required for the binary search to work correctly.
  const vec2 ill = vec2(0.31271, 0.32902);// now adapted to D65, not C (0.31006, 0.31616);
  return mod(2.0*M_PI-2.52-atan(xy.y-ill.y, xy.x-ill.x), 2.0*M_PI);
}


vec2
munsell_lookup(
    int hue_idx,
    int chroma_idx)
{
  hue_idx    = (hue_idx % munsell_hdim + munsell_hdim) % munsell_hdim; // unsigned modulo
  chroma_idx = clamp(chroma_idx, 0, munsell_cdim-1);                   // clamp to range
  return vec2(
      munsell_xy[2*(munsell_cdim * hue_idx + chroma_idx) + 0],
      munsell_xy[2*(munsell_cdim * hue_idx + chroma_idx) + 1]);
}

// compute which side of a line v0--v1 the point p lies
float
munsell_side(
    vec2 v0,
    vec2 v1,
    vec2 p)
{
  v1 -= v0; p -= v0;
  return v1.x * p.y - v1.y * p.x;
}

// forward method, interpolate same two triangles as the other direction
vec2
munsell_to_xy(const vec2 mhc) // 2d munsell coordinate: hue and chroma
{
  float hm = mhc.x * munsell_hdim;
  float cm = mhc.y * munsell_cdim;
  int hidxm = int(hm);
  int cidxm = int(cm);
  float hu = hm - hidxm;
  float cu = cm - cidxm;
  vec2 res0, res1, res2, res3;
  res3 = munsell_lookup(hidxm, cidxm+1); res2 = munsell_lookup(hidxm+1, cidxm+1);
  res0 = munsell_lookup(hidxm, cidxm  ); res1 = munsell_lookup(hidxm+1, cidxm);
  //  cu = 1
  //    3---2
  // t1 |  /|                    01  11
  //    |/  | t0
  //    0---1  hu = 1            00  10
  if(hu >= cu) // triangle 0
    return (1-hu) * res0 + (hu-cu) * res1 + (cu) * res2;
  else // t1
    return (hu) * res2 + (cu-hu) * res3 + (1-cu) * res0;
}

// inversion method
// convert xy to polar around illuminant (C)
// find matching munsell box and interpolate the corners
vec2
munsell_from_xy(const vec2 xy)
{
  int hidxm = 0, hidxM = munsell_hdim;
  int cidxm = 0, cidxM = munsell_cdim-1;
  const vec2 ill = vec2(0.31271, 0.32902);// now adapted to D65, not C (0.31006, 0.31616);
  const float theta = xy_to_monotone_hue_angle(xy);
  const float rad2  = dot(xy-ill,xy-ill);
  // while(true)
  for(int i=0;i<6;i++)
  { // quad tree refinement step using midpoint
    int hidx = (hidxm + hidxM)/2;
    int cidx = (cidxm + cidxM)/2;
    vec2 res = munsell_lookup(hidx, cidx);
    float th = xy_to_monotone_hue_angle(res);
    float r2 = dot(res-ill,res-ill);
    if(th <= theta) hidxm = hidx;
    else            hidxM = hidx;
    if(r2 <= rad2)  cidxm = cidx;
    else            cidxM = cidx;
    if(hidxM <= hidxm + 1 && cidxM <= cidxm + 1) // reached last level/resolution limit
      break;
  }

  // now we reached the leaf level and may have found our quad.
  // unfortunately the quad tree is just very approximate, so maybe
  // we'll be outside the quad. in this case, we'll walk the grid
  // a bit until we find a containing quad.
  // while(true)
  for(int i=0;i<6;i++)
  {
    vec2 res0, res1, res2, res3;
    // this polygon winds ccw:
    res3 = munsell_lookup(hidxm, cidxm+1); res2 = munsell_lookup(hidxm+1, cidxm+1);
    res0 = munsell_lookup(hidxm, cidxm  ); res1 = munsell_lookup(hidxm+1, cidxm);
    // these are all positive if xy is inside the polygon
    float s0 = munsell_side(res0, res1, xy), s1 = munsell_side(res1, res2, xy);
    float s2 = munsell_side(res2, res3, xy), s3 = munsell_side(res3, res0, xy);
    // step to next cells
    if     (s0 < 0 && cidxm > 0) cidxm--;
    else if(s0 < 0 && cidxm == 0) hidxm = ((hidxm + munsell_hdim/2) % munsell_hdim + munsell_hdim) % munsell_hdim; // other side of white
    else if(s2 < 0 && cidxm < munsell_cdim-2) cidxm++;
    if     (s1 < 0) hidxm++;
    else if(s3 < 0) hidxm--;
    if(s0 >= 0 && s1 >= 0 && s3 >= 0 && (s2 >= 0 || cidxm >= munsell_cdim-2))
    { // yay we're inside our quad!
      float t0 = munsell_side(res0, res1, res2); // size of triangle 0
      float t1 = munsell_side(res2, res3, res0); // size of triangle 1
      float u0, u1, u2, u3;
      if(cidxm > 0 && s0 + s1 <= t0)
      { // triangle 0
        u2 = s0 / t0;
        u0 = s1 / t0;
        u1 = 1.0-u0-u2;
        u3 = 0.0;
      }
      else
      { // triangle 1
        u2 = s3 / t1;
        u0 = s2 / t1;
        u3 = 1.0-u0-u2;
        u1 = 0.0;
      }
      // now interpolate grid corner coordinates via these barycentrics:
      float hi = u0 * hidxm + u1 * (hidxm+1.0) + u2 * (hidxm+1.0) + u3 *  hidxm;
      float ci = u0 * cidxm + u1 *  cidxm      + u2 * (cidxm+1.0) + u3 * (cidxm+1.0);
      return vec2(hi/munsell_hdim, ci/munsell_cdim);
    }
  }
}

